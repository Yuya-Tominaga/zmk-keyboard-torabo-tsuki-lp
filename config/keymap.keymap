#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
/ {
    combos {
        compatible = "zmk,combos";
        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        layer_0 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                      &trans         &trans  &trans         &trans            &trans        &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T                                       &kp Y          &kp U   &kp I          &kp O             &kp P         &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G    &trans          &trans             &kp H          &kp J   &kp K          &kp L             &kp SEMI      &trans
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B    &kp LEFT_SHIFT  &kp RIGHT_CONTROL  &kp N          &kp M   &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &trans
&trans  &sl 3   &sl 2   &sl 1   &sl 0   &kp TAB  &kp SPACE       &kp RIGHT_ALT      &kp RIGHT_GUI  &trans  &trans         &kp RETURN        &kp DEL       &trans
            >;
        };
        layer_1 {
            bindings = <
&trans  &trans       &trans        &trans        &trans         &trans                                      &trans         &trans         &trans          &trans           &trans          &trans
&trans  &kp N1       &kp N2        &kp N3        &kp N4         &kp N5                                      &kp N6         &kp N7         &kp N8          &kp N9           &kp N0          &trans
&trans  &kp EXCL     &kp AT        &kp HASH      &kp DOLLAR     &kp PERCENT  &trans         &trans         &kp CARET      &kp AMPERSAND  &kp ASTERISK    &kp LPAR         &kp RPAR        &trans
&trans  &kp MINUS    &kp PLUS      &kp LBKT      &kp RBKT       &kp PIPE     &mkp LCLK      &mkp RCLK      &kp GRAVE      &kp UNDER      &kp EQUAL       &kp LBRC         &kp RBRC        &trans
&trans  &trans       &trans        &trans        &trans         &kp ESC      &mmv MOVE_UP   &mmv MOVE_DOWN &mmv MOVE_LEFT &mmv MOVE_RIGHT &msc SCRL_UP    &msc SCRL_DOWN   &kp BSLH        &trans
            >;
        };
        layer_2 {
            bindings = <
&trans  &trans       &trans         &trans         &trans          &trans                                      &trans           &trans           &trans         &trans        &trans         &trans
&trans  &kp F1       &kp F2         &kp F3         &kp F4          &kp F5                                      &kp F6           &kp F7           &kp F8         &kp F9        &kp F10        &trans
&trans  &kp F11      &kp F12        &kp LG(LEFT)   &kp LG(RIGHT)   &kp LG(UP)     &trans       &trans         &kp LEFT         &kp DOWN         &kp UP         &kp RIGHT     &kp COLON      &trans
&trans  &kp LG(Z)    &kp LG(X)      &kp LG(C)      &kp LG(V)       &kp LG(A)      &kp LG(S)    &kp LG(F)      &kp HOME         &kp PG_DN        &kp PG_UP      &kp END       &kp DQT        &trans
&trans  &trans       &trans         &trans         &trans          &kp LG(SPACE)  &kp LG(W)    &kp LG(T)      &kp LG(LS(LBKT)) &kp LG(LS(RBKT)) &kp LA(LG(ESC)) &kp LG(GRAVE) &kp SQT        &trans
            >;
        };
        layer_3 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans                                    &trans    &trans    &trans    &trans     &trans    &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &trans    &trans    &trans    &trans     &trans    &trans
&trans  &bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &trans        &trans        &trans       &trans         &trans    &trans    &trans    &trans     &trans    &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans       &trans         &trans    &trans    &trans    &trans     &trans    &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans       &trans         &trans    &trans    &trans    &trans     &trans    &trans
            >;
        };
    };
};
